import pandas as pd
import plotly.express as px
import streamlit as st

st.set_page_config(
    page_title="Opportunity",
    page_icon="üìù",
)

st.title("Welcome üòÄ")
st.markdown(f'<h1 style="font-size:25px; text-align: center">{"Monitoring the evolution of income over time"}</h1>', unsafe_allow_html=True)

data = pd.read_excel('Datatest.xlsx')

# Ajouter une colonne pour le total des revenus
data['Total Revenue'] = data['1st Year Revenue (Merged)'] + data['Revenue Weightage (next year)']

# Ajouter une colonne pour la granularit√© temporelle s√©lectionn√©e par l'utilisateur (par d√©faut par mois)
data['Time Granularity'] = data['Created Date'].dt.to_period('M').astype(str)

# Cr√©er une liste des granularit√©s disponibles
granularities = ['Par mois', 'Par trimestre', 'Par ann√©e']

# Demander √† l'utilisateur de choisir la granularit√© temporelle
selected_granularity = st.selectbox('Choisissez la granularit√© temporelle :', granularities)

# Regrouper les donn√©es en fonction de la granularit√© s√©lectionn√©e par l'utilisateur
if selected_granularity == 'Par trimestre':
    data['Time Granularity'] = data['Created Date'].dt.to_period('Q').astype(str)
elif selected_granularity == 'Par ann√©e':
    data['Time Granularity'] = data['Created Date'].dt.to_period('Y').astype(str)

# Regrouper les donn√©es par granularit√© temporelle et calculer le total des revenus
revenue_by_time = data.groupby('Time Granularity')['Total Revenue'].sum().reset_index()

# Cr√©er le graphique avec Plotly Express
fig = px.line(revenue_by_time, x='Time Granularity', y='Total Revenue', title='√âvolution du total des revenus')

# Mettre √† jour les √©tiquettes de l'axe des x en fonction de la granularit√©
if selected_granularity == 'Par mois':
    fig.update_xaxes(title_text='Mois')
elif selected_granularity == 'Par trimestre':
    fig.update_xaxes(title_text='Trimestre')
elif selected_granularity == 'Par ann√©e':
    fig.update_xaxes(title_text='Ann√©e')

# Afficher le graphique dans Streamlit
st.plotly_chart(fig)




st.markdown(f'<h1 style="color: blue; font-size:18px; text-align: center">{"Powerd by Orexine"}</h1>', unsafe_allow_html=True)
